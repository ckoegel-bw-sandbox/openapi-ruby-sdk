=begin
#FrankenSpec

#Bandwidth's Frankensteined API Spec

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.2.1

=end

require 'spec_helper'
require 'json'

# Unit tests for RubySdk::MFAApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'MFAApi' do
  before do
    # run before each test
    @api_instance = RubySdk::MFAApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of MFAApi' do
    it 'should create an instance of MFAApi' do
      expect(@api_instance).to be_instance_of(RubySdk::MFAApi)
    end
  end

  # unit tests for messaging_two_factor
  # Messaging Authentication
  # Multi-Factor authentication with Bandwidth Messaging services. Allows a user to send an MFA code via a text message (SMS).
  # @param account_id Bandwidth Account ID with Messaging service enabled
  # @param two_factor_code_request_schema 
  # @param [Hash] opts the optional parameters
  # @return [TwoFactorMessagingResponse]
  describe 'messaging_two_factor test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for verify_two_factor
  # Verify Authentication Code
  # Allows a user to verify an MFA code.
  # @param account_id Bandwidth Account ID with Two-Factor enabled
  # @param two_factor_verify_request_schema 
  # @param [Hash] opts the optional parameters
  # @return [TwoFactorVerifyCodeResponse]
  describe 'verify_two_factor test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for voice_two_factor
  # Voice Authentication
  # Multi-Factor authentication with Bandwidth Voice services. Allows for a user to send an MFA code via a phone call.
  # @param account_id Bandwidth Account ID with Voice service enabled
  # @param two_factor_code_request_schema 
  # @param [Hash] opts the optional parameters
  # @return [TwoFactorVoiceResponse]
  describe 'voice_two_factor test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
