=begin
#FrankenSpec

#Bandwidth's Frankensteined API Spec

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.2.1

=end

require 'spec_helper'
require 'json'

# Unit tests for RubySdk::RecordingsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'RecordingsApi' do
  before do
    # run before each test
    @api_instance = RubySdk::RecordingsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of RecordingsApi' do
    it 'should create an instance of RecordingsApi' do
      expect(@api_instance).to be_instance_of(RubySdk::RecordingsApi)
    end
  end

  # unit tests for delete_call_transcription
  # Delete Transcription
  # Deletes the specified recording&#39;s transcription.
  # @param account_id 
  # @param call_id 
  # @param recording_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_call_transcription test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_recording
  # Delete Recording
  # Deletes the specified recording.
  # @param account_id 
  # @param call_id 
  # @param recording_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_recording test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_recording_media
  # Delete Recording Media
  # Deletes the specified recording&#39;s media.
  # @param account_id 
  # @param call_id 
  # @param recording_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_recording_media test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for download_call_recording
  # Download Recording
  # Downloads the specified recording.
  # @param account_id 
  # @param call_id 
  # @param recording_id 
  # @param [Hash] opts the optional parameters
  # @return [File]
  describe 'download_call_recording test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_call_recording
  # Get Call Recording
  # Returns metadata for the specified recording.
  # @param account_id 
  # @param call_id 
  # @param recording_id 
  # @param [Hash] opts the optional parameters
  # @return [CallRecordingMetadata]
  describe 'get_call_recording test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_call_recordings
  # Get Call Recordings
  # Returns a (potentially empty) list of metadata for the recordings that took place during the specified call.
  # @param account_id 
  # @param call_id 
  # @param [Hash] opts the optional parameters
  # @return [Array<CallRecordingMetadata>]
  describe 'get_call_recordings test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_call_transcription
  # Get Transcription
  # Downloads the specified transcription.
  # @param account_id 
  # @param call_id 
  # @param recording_id 
  # @param [Hash] opts the optional parameters
  # @return [TranscriptionResponse]
  describe 'get_call_transcription test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for modify_call_recording_state
  # Update Recording
  # Pauses or resumes a recording.
  # @param account_id 
  # @param call_id 
  # @param modify_call_recording_request 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'modify_call_recording_state test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for query_call_recordings
  # Get Call Recordings
  # Returns a list of metadata for the recordings associated with the specified account. The list can be filtered by the optional from, to, minStartTime, and maxStartTime arguments. The list is capped at 1000 entries and may be empty if no recordings match the specified criteria.
  # @param account_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :from 
  # @option opts [String] :to 
  # @option opts [String] :min_start_time 
  # @option opts [String] :max_start_time 
  # @return [Array<CallRecordingMetadata>]
  describe 'query_call_recordings test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for transcribe_call_recording
  # Create Transcription Request
  # Requests that the specified recording be transcribed.
  # @param account_id 
  # @param call_id 
  # @param recording_id 
  # @param transcribe_recording_request 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'transcribe_call_recording test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
