=begin
#FrankenSpec

#Bandwidth's Frankensteined API Spec

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.2.1

=end

require 'spec_helper'
require 'json'

# Unit tests for RubySdk::SessionsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'SessionsApi' do
  before do
    # run before each test
    @api_instance = RubySdk::SessionsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of SessionsApi' do
    it 'should create an instance of SessionsApi' do
      expect(@api_instance).to be_instance_of(RubySdk::SessionsApi)
    end
  end

  # unit tests for add_participant_to_session
  # Add Participant
  # Add a participant to a session.  Subscriptions can optionally be provided as part of this call. 
  # @param account_id Account ID
  # @param session_id Session ID
  # @param participant_id Participant ID
  # @param [Hash] opts the optional parameters
  # @option opts [Subscriptions] :subscriptions Subscriptions the participant should be created with
  # @return [nil]
  describe 'add_participant_to_session test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_session
  # Create Session
  # Create a new session.  Sessions are idempotent, so relevant parameters must be set in this function if desired. 
  # @param account_id Account ID
  # @param [Hash] opts the optional parameters
  # @option opts [Session] :session Session parameters
  # @return [Session]
  describe 'create_session test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_session
  # Delete Session
  # Delete session by ID.
  # @param account_id Account ID
  # @param session_id Session ID
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_session test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_participant_subscriptions
  # Get Participant Subscriptions
  # Get a participant&#39;s subscriptions.
  # @param account_id Account ID
  # @param session_id Session ID
  # @param participant_id Participant ID
  # @param [Hash] opts the optional parameters
  # @return [Subscriptions]
  describe 'get_participant_subscriptions test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_session
  # Get Session
  # Get session by ID.
  # @param account_id Account ID
  # @param session_id Session ID
  # @param [Hash] opts the optional parameters
  # @return [Session]
  describe 'get_session test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_session_participants
  # List Participants
  # List participants in a session.
  # @param account_id Account ID
  # @param session_id Session ID
  # @param [Hash] opts the optional parameters
  # @return [Array<Participant>]
  describe 'list_session_participants test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for remove_participant_from_session
  # Remove Participant
  # Remove a participant from a session.  This will automatically remove any subscriptions the participant has associated with this session. 
  # @param account_id Account ID
  # @param session_id Session ID
  # @param participant_id Participant ID
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'remove_participant_from_session test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_participant_subscriptions
  # Update Participant Subscriptions
  # Update a participant&#39;s subscriptions.  This is a full update that will replace the participant&#39;s subscriptions. First call &#x60;getParticipantSubscriptions&#x60; if you need the current subscriptions. Call this function with no &#x60;Subscriptions&#x60; object to remove all subscriptions. 
  # @param account_id Account ID
  # @param session_id Session ID
  # @param participant_id Participant ID
  # @param [Hash] opts the optional parameters
  # @option opts [Subscriptions] :subscriptions Initial state
  # @return [nil]
  describe 'update_participant_subscriptions test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
